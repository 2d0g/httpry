Along with the core httpry program a number of Perl scripts are also included.
This provides a listing of those files and a brief description of what each
script does. Run each tool with the -h parameter to get a listing of the
available command line parameters for each.

The following Perl modules are required to run all the included plugins:
        MIME::Lite
        DBI
        File::Tail

Each tool is expecting httpry to be run with the default format string. If you
want the scripts to utilize different fields, they will have to be modified
accordingly. In general, it is a relatively simple matter to add additional
field support to each script. Additionally, if you add the new data to the end
of each line, most of these scripts will simply ignore it by default and work
just fine.

A summary of the scripts:

 ./scripts/parse_log.pl
        Core script for plugins. Processes input log files and delivers the data
        to each initialized plugin. Plugins are activated by simply having a .pm
        extension and being placed in the plugin directory (default is
        ./plugins). If a plugins directory is specified (-p), that is used. If
        no directory is specified, the script first searches the current directory
        for a plugin directory followed by the base directory of the script. The
        first directory found is used. If no directory is found, the script
        exist. To ignore a plugin, either remove it from the plugin directory or
        add it to the @ignore array within the script.

 ./scripts/plugins/client_flows.pm
        Checks for specified content in the input file according to a list of
        keywords. To properly analyze content, it breaks the input file into
        distinct flows which are time delimited blocks of traffic for each
        client IP. Also outputs some basic flow statistics. Because of the
        nature of its task, all server responses are discarded.

 ./scripts/plugins/db_dump.pm
        Dumps log file data into a previously configured database. Useful for
        more extensive data mining or a user-friendly web interface. Use the
        included db_dump.mysql to initialize the required database table.

 ./scripts/plugins/find_proxies.pm
        Performs some basic tests looking for proxy usage. Most tests are
        rudimentary and quite a lot of noise is generated.

 ./scripts/plugins/log_summary.pm
        Provides extensive information regarding the input file(s), visited
        hosts, top talkers and requested file extensions.

 ./scripts/plugins/sample_plugin.pm
        A simple plugin with no functionality designed as an easy way to see how
        the plugins are structured and to provide a framework for writing new
        plugins.

 ./scripts/plugins/search_terms.pm
        Outputs a raw dump of all entered search terms for a number of the major
        search services. The output is grouped by domain name.

 ./scripts/plugins/xml_format.pm
        Outputs the input log file in XML format. If the output file already
        exists, a new flow is appended.

 ./scripts/rotate_log.pl
        Moves an active log file into a specified directory. Also offers options
        for deleting text files, compressing the log files and/or purging old
        log files according to number or total size.

These tools are not necessarily designed to be drop-in replacements for your
own solutions. If one of these tools does what you need it to, great! However,
they are more designed as starting points for your own processing code. The
parse_log.pl script allows you to write your own plugins and for most tasks
will work just fine. For more complex tasks you'll want to write custom code.

If you write scripts of your own and think they would be useful to other
people, feel free to send them to me and I'll review them for release with
the project.
